name: Build Release Binaries

on:
  push:
    branches: [main]
  release:
    types: [created, edited]

jobs:
  macos:
    name: macOS Builds
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm ci
          cd client && npm ci
        working-directory: app

      - name: Build Client
        run: npm run build:client
        working-directory: app

      - name: Build Electron (${{ matrix.arch }})
        run: |
          rm -rf dist-electron
          npm run dist -- --mac --${{ matrix.arch }}
        working-directory: app

      - name: Upload macOS Artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-artifacts
          path: app/dist-electron/**

  linux:
    name: Linux Builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup ARM64 cross-compilation
        if: matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "AR=aarch64-linux-gnu-ar" >> $GITHUB_ENV
          echo "STRIP=aarch64-linux-gnu-strip" >> $GITHUB_ENV
          echo "LINK=aarch64-linux-gnu-g++" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          npm ci
          cd client && npm ci
        working-directory: app

      - name: Build Client
        run: npm run build:client
        working-directory: app

      - name: Build Electron (${{ matrix.arch }})
        run: |
          rm -rf dist-electron
          npm run dist -- --linux --${{ matrix.arch }}
        working-directory: app

      - name: Upload Linux Artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}-artifacts
          path: app/dist-electron/**

  windows:
    name: Windows Builds
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Windows ARM64 build tools
        if: matrix.arch == 'arm64'
        shell: pwsh
        run: |
          npm config set target_arch arm64
          npm config set target_platform win32
          npm config set cache C:\npm-cache --global
          npm config set msvs_version 2022

      - name: Install Dependencies
        run: |
          npm ci
          cd client && npm ci
        working-directory: app

      - name: Build Client
        run: npm run build:client
        working-directory: app

      - name: Build Electron (${{ matrix.arch }})
        shell: pwsh
        run: |
          if (Test-Path dist-electron) { Remove-Item dist-electron -Recurse -Force }
          npm run dist -- --win --${{ matrix.arch }}
        working-directory: app

      - name: Upload Windows Artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-artifacts
          path: app/dist-electron/**

  # raspberry-pi:
  #   name: Raspberry Pi Build
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     - name: Install Dependencies
  #       run: |
  #         npm ci
  #         cd client && npm ci
  #       working-directory: app

  #     - name: Build Client
  #       run: npm run build:client
  #       working-directory: app

  #     - name: Build Electron (Raspberry Pi)
  #       run: |
  #         rm -rf dist-electron
  #         npm run dist -- --linux --armv7l
  #       working-directory: app

  #     - name: Upload Raspberry Pi Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: raspberry-pi-artifacts
  #         path: app/dist-electron/**
